SET NOCOUNT ON

MERGE INTO [dbo].[SCHEDULERINSTANCE] AS Target
USING (VALUES
  (N'5AAF9FD7-5BC6-4C49-A7BD-182966A34D4C',N'Console-DEFAULT1')
 ,(N'98C1A030-039D-4EE3-9CCA-640B5F47848A',N'WebManagementConsole-DEFAULT')
) AS Source ([ID],[INSTANCENAME])
ON (Target.[ID] = Source.[ID])
WHEN MATCHED AND (
	NULLIF(Source.[INSTANCENAME], Target.[INSTANCENAME]) IS NOT NULL OR NULLIF(Target.[INSTANCENAME], Source.[INSTANCENAME]) IS NOT NULL) THEN
 UPDATE SET
  [INSTANCENAME] = Source.[INSTANCENAME]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([ID],[INSTANCENAME])
 VALUES(Source.[ID],Source.[INSTANCENAME])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE
;
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [dbo].[SCHEDULERINSTANCE]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[dbo].[SCHEDULERINSTANCE] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET NOCOUNT OFF
GO